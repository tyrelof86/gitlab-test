name: gitlab-test-cicd

on:
  push:
    paths:
      - src/**
    brances:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Shorten commit id
        shell: bash
        run: |
          echo "COMMIT_ID=${GITHUB_SHA::6}" >> "$GITHUB_ENV"
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: tyrelfecha/gitlab-test:${{ env.COMMIT_ID }}
    outputs:
      commit_id: ${{ env.COMMIT_ID }}

  cd:
    needs: ci
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2

      - name: Modify values file
        shell: bash
        run: |
          echo ${{needs.ci.outputs.commit_id}}
          pip install yq
          yq -Yi '.image.tag = "${{needs.ci.outputs.commit_id}}"' charts/gitlab-test/values-dev.yaml
      
      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: "Updates values.yaml with commit ${{needs.ci.outputs.commit_id}}"
      
      - name: Install argocd
        shell: bash
        run: |
          curl -ksSL -o argocd-linux-amd64 https://argocd-server.argocd/download/argocd-linux-amd64
          chmod +x argocd-linux-amd64
          sudo mv argocd-linux-amd64 /usr/local/bin/argocd

      - name: argocd login
        shell: bash
        run: |
          argocd login argocd-server.argocd \
            --insecure  \
            --grpc-web \
            --username admin \
            --password  ${{ secrets.ARGOCD_PASSWORD }}

      - name: Ensure argocd repo and app
        shell: bash
        run: |

          # Connects the argocd repo
          repo="https://github.com/tyrelof86/gitlab-test.git"
          argocd repo list | grep -q $repo || argocd repo add $repo

          # Creates the argocd app
          argocd app get gitlab-test || argocd app create gitlab-test \
            --repo $repo \
            --path charts/gitlab-test \
            --dest-namespace dev \
            --dest-server https://kubernetes.default.svc \
            --values values-dev.yaml \
            --revision main \
            --sync-policy manual \
            --sync-option CreateNamespace=true

      - name: Argocd app sync
        shell: bash
        run: |
          argocd app sync gitlab-test
          argocd app wait gitlab-test --timeout 180